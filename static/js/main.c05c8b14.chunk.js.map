{"version":3,"sources":["RepositoryTile.js","OfflineData.js","App.js","index.js"],"names":["RepositoryTile","state","IsOpen","ClickHandler","bind","fx","this","props","details","fun","name","className","type","onClick","src","avatar","style","color","author","Collapse","isOpen","paddingLeft","description","languageColor","float","width","language","height","stars","forks","IsOpened","React","Component","OfflineData","App","DataFromApi","IsLoading","DataLoadingSuccessfull","OpenedId","reRender","id","console","log","setState","prevState","fetch","then","response","ok","json","data","catch","error","RepositoryTiles","map","item","container","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.c05c8b14.chunk.js","sourcesContent":["import React from \"react\";\nimport {Collapse,Button, CardBody, Card} from 'reactstrap';\nimport \"./index.css\";\n\nclass RepositoryTile extends React.Component{\n  constructor(){\n    super();\n    this.state={\n      IsOpen:false,\n    }\n    this.ClickHandler=this.ClickHandler.bind(this);\n  }\n\n  //On click it sends the id of clicked element to reRender Element in parent class;\n  ClickHandler(){\n    const fx=this.props.details.fun;\n    fx(this.props.details.name);\n  }\n  //Since Only props were beign updated during reRendring of RepositoryTiles states of childs were not being update\n  //Hence lifecycle method was called to update on every update of props\n  static getDerivedStateFromProps(props,state) {\n    if(props.details.IsOpened === state.IsOpen){\n      return {IsOpen:false};\n    }\n    return {IsOpen:props.details.IsOpened}\n  }\n\n  //It finally return the tile to be displayed\n  //Some of small style are added inline while othres were kept in index.css\n  render(){\n    return(\n      <div className=\"container-lg\">\n        <button type=\"button\" className=\"collapsible\" onClick={this.ClickHandler}>\n          <img src={this.props.details.avatar} className=\"icon\"/>\n          <p style={{color:\"grey\"}}>{this.props.details.author}</p>\n          <h3>{this.props.details.name}</h3>\n        </button>\n\n        <Collapse isOpen={this.state.IsOpen}>\n          <div className=\"content\">\n            <p style={{color:\"grey\",paddingLeft:\"100px\"}}>{this.props.details.description}</p>\n            <br></br>\n            <ul style={{paddingLeft:\"100px\",\"list-style-type\":\"none\"}}>\n              <li style={{color:this.props.details.languageColor,float:\"left\",width:\"33%\"}}>{this.props.details.language}</li>\n              <li style={{float:\"left\",width:\"33%\"}}>\n              <img style={{width:\"20px\",height:\"20px\"}}src=\"https://image.flaticon.com/icons/svg/148/148841.svg\"/>{this.props.details.stars}</li>\n              <li style={{float:\"right\",width:\"33%\"}}><img  style={{width:\"20px\",height:\"20px\"}} src=\"https://maxcdn.icons8.com/Android_L/PNG/48/Programming/git_fork-48.png\"/>{this.props.details.forks}</li>\n            </ul>\n          </div>\n        </Collapse>\n      </div>\n    );\n  }\n}\nexport default RepositoryTile;\n","var OfflineData=[\n  {\n    \"author\": \"xingshaocheng\",\n    \"name\": \"architect-awesome\",\n    \"avatar\": \"https://github.com/xingshaocheng.png\",\n    \"url\": \"https://github.com/xingshaocheng/architect-awesome\",\n    \"description\": \"后端架构师技术图谱\",\n    \"language\": \"Go\",\n    \"languageColor\": \"#3572A5\",\n    \"stars\": 7333,\n    \"forks\": 1546,\n    \"currentPeriodStars\": 1528,\n    \"builtBy\": [\n      {\n        \"href\": \"https://github.com/viatsko\",\n        \"avatar\": \"https://avatars0.githubusercontent.com/u/376065\",\n        \"username\": \"viatsko\"\n      }\n    ]\n  },\n  {\n    \"author\": \"google\",\n    \"name\": \"gvisor\",\n    \"avatar\": \"https://github.com/google.png\",\n    \"url\": \"https://github.com/google/gvisor\",\n    \"description\": \"Container Runtime Sandbox\",\n    \"language\": \"Go\",\n    \"languageColor\": \"#3572A5\",\n    \"stars\": 3346,\n    \"forks\": 118,\n    \"currentPeriodStars\": 1624,\n    \"builtBy\": [\n      {\n        \"href\": \"https://github.com/viatsko\",\n        \"avatar\": \"https://avatars0.githubusercontent.com/u/376065\",\n        \"username\": \"viatsko\"\n      }\n    ]\n  },\n  {\n    \"author\": \"davideuler\",\n    \"name\": \"architecture.of.internet-product\",\n    \"avatar\": \"https://github.com/davideuler.png\",\n    \"url\": \"https://github.com/davideuler/architecture.of.internet-product\",\n    \"description\": \"互联网公司技术架构，微信/淘宝/腾讯/阿里/美团点评/百度/微博/Google/Facebook/Amazon/eBay的架构，欢迎PR补充\",\n    \"language\": \"Go\",\n    \"languageColor\": \"#3572A5\",\n    \"stars\": 2763,\n    \"forks\": 416,\n    \"currentPeriodStars\": 1427,\n    \"builtBy\": [\n      {\n        \"href\": \"https://github.com/viatsko\",\n        \"avatar\": \"https://avatars0.githubusercontent.com/u/376065\",\n        \"username\": \"viatsko\"\n      }\n    ]\n  },\n  {\n    \"author\": \"kusti8\",\n    \"name\": \"proton-native\",\n    \"avatar\": \"https://github.com/kusti8.png\",\n    \"url\": \"https://github.com/kusti8/proton-native\",\n    \"description\": \"A React environment for cross platform native desktop apps\",\n    \"language\": \"JavaScript\",\n    \"languageColor\": \"purple\",\n    \"stars\": 4711,\n    \"forks\": 124,\n    \"currentPeriodStars\": 1186,\n    \"builtBy\": [\n      {\n        \"href\": \"https://github.com/viatsko\",\n        \"avatar\": \"https://avatars0.githubusercontent.com/u/376065\",\n        \"username\": \"viatsko\"\n      }\n    ]\n  }\n];\nexport default OfflineData;\n","import React from \"react\";\nimport RepositoryTile from \"./RepositoryTile.js\";\nimport OfflineData from \"./OfflineData\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state={\n      DataFromApi:OfflineData,\n      IsLoading:false,\n      DataLoadingSuccessfull:true,\n      OpenedId:\"\"\n    };\n    this.reRender=this.reRender.bind(this);\n  }\n\n  //Below code will re render all the tiles as closed when some element in children is clicked\n  //This function is passed to every child in it's props.\n  reRender(id){\n    console.log(\"Clicked with id: \",id);\n    //This basically changes the OpenedId i.e. the id that must remain open among all the tiles\n    this.setState((prevState)=>{\n      return{\n        DataFromApi:prevState.DataFromApi,\n        IsLoading:prevState.IsLoading,\n        DataLoadingSuccessfull:prevState.DataLoadingSuccessfull,\n        OpenedId:id\n      };\n    });\n  }\n\n\n  componentDidMount(){\n    //Sending request to API\n    fetch(\"https://private-anon-21de9d8636-githubtrendingapi.apiary-mock.com/repositories\").then(response=>{\n      if(!response.ok){\n        this.setState(prevState=>{return{DataFromApi:prevState.DataFromApi,IsLoading:prevState.IsLoading,DataLoadingSuccessfull:false,OpenedId:prevState.OpenedId}});\n      }\n      else\n        return response.json()\n    })//Closing of promise we checked if response was okay are if had some error\n    .then(data=>{\n      this.setState(prevState=>{\n        //As soon as the data is loaded it is stored in state.DataFromApi\n        //console.log(data);\n        return {DataFromApi:data,IsLoading:false,DataLoadingSuccessfull:true};\n      });//Closing of setState function\n    })//closing of promise\n    .catch(error =>{\n      this.setState(prevState=>{return{DataFromApi:prevState.DataFromApi,IsLoading:prevState.IsLoading,DataLoadingSuccessfull:false,OpenedId:prevState.OpenedId}});\n    });//Closing of catch statement*/\n  }\n\n\n  render(){\n\n    //This will be rendered if error is encounterd while fetching data.\n    if(!this.state.DataLoadingSuccessfull){\n      return  (<h1>Failed to fetch data try Again</h1>)\n    }\n    //This code will be rendered while the fetching is in going on.\n    if(this.state.IsLoading){\n      return (<h1>Loading...</h1>);\n    }\n    //If data is fetching is successfull below code will be rendered\n    //RepositoryTiles is calculated everytime rendring is done with a new OpenedId\n    //It is then passed to render.\n    var RepositoryTiles=this.state.DataFromApi.map(item=>{\n      item.fun=this.reRender;\n      item.IsOpened=(item.name === this.state.OpenedId)?true:false;\n      return <RepositoryTile details={item}/>});\n\n    return (\n      <div className=\"container\">\n        {RepositoryTiles}\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\n\nvar container=document.getElementById(\"root\");\nReactDOM.render(<App/>,container);\n"],"sourceRoot":""}